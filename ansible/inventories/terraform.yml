# inventories/terraform.yml - FIXED VERSION

# Use the correct plugin name for Terraform Cloud/Enterprise
plugin: cloud.terraform.terraform_state
# Alternative: if you have local terraform state, use:
# plugin: community.general.terraform

# Terraform Cloud configuration
hostname: app.terraform.io
organization: '3assasa'
workspace: 'devsecops-infra'

# If using local state instead, uncomment these:
# project_path: ../infra
# state_file: terraform.tfstate

# Host and group construction
keyed_groups:
  - key: env_name | default('unknown')
    prefix: env
  - key: role | default('unknown') 
    prefix: role

compose:
  # Extract environment and role from hostname
  env_name: inventory_hostname.split('-')[0]
  role: inventory_hostname.split('-')[-1]
  
  # Set ansible_host based on the role and environment
  ansible_host: >-
    (inventory_hostname.endswith('-frontend') and inventory_hostname.startswith('staging')) ? 
      terraform_outputs.staging_frontend_hostname.value :
    (inventory_hostname.endswith('-frontend') and inventory_hostname.startswith('production')) ? 
      terraform_outputs.production_frontend_hostname.value :
    (inventory_hostname.endswith('-bastion') and inventory_hostname.startswith('staging')) ? 
      terraform_outputs.staging_bastion_ip.value :
    (inventory_hostname.endswith('-bastion') and inventory_hostname.startswith('production')) ? 
      terraform_outputs.production_bastion_ip.value :
    (inventory_hostname.endswith('-backend') and inventory_hostname.startswith('staging')) ? 
      terraform_outputs.staging_backend_private_ip.value :
    (inventory_hostname.endswith('-backend') and inventory_hostname.startswith('production')) ? 
      terraform_outputs.production_backend_private_ip.value :
    inventory_hostname

  # Set SSH proxy for backend servers
  ansible_ssh_common_args: >-
    (inventory_hostname.endswith('-backend') and inventory_hostname.startswith('staging')) ?
      '-o ProxyJump=root@' + terraform_outputs.staging_bastion_ip.value :
    (inventory_hostname.endswith('-backend') and inventory_hostname.startswith('production')) ?
      '-o ProxyJump=root@' + terraform_outputs.production_bastion_ip.value :
    ''

# Define groups
groups:
  # Role-based groups
  bastion: inventory_hostname.split('-')[-1] == 'bastion'
  frontend: inventory_hostname.split('-')[-1] == 'frontend'  
  backend: inventory_hostname.split('-')[-1] == 'backend'
  
  # Environment groups
  staging: inventory_hostname.split('-')[0] == 'staging'
  production: inventory_hostname.split('-')[0] == 'production'
  
  # Combined groups
  app_servers: inventory_hostname.split('-')[-1] in ['frontend', 'backend']