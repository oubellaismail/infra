#!/usr/bin/env python3
import json
import yaml
import sys
import os

def load_terraform_outputs(filepath='terraform_outputs.json'):
    """Load Terraform outputs from JSON file."""
    try:
        with open(filepath, 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        print(f"Error: {filepath} not found. Run 'make inventory' first.", file=sys.stderr)
        sys.exit(1)

def main():
    """Main function to generate inventory."""
    tf_outputs = load_terraform_outputs()
    all_hosts = {}

    for env in ['staging', 'production']:
        # Get the IP addresses first, as they are needed for all hosts and proxyjumps
        bastion_ip = tf_outputs.get(f"{env}_bastion_ip", {}).get('value')
        frontend_ip = tf_outputs.get(f"{env}_frontend_ip", {}).get('value')
        backend_private_ip = tf_outputs.get(f"{env}_backend_private_ip", {}).get('value')
        
        # Get the new hostname outputs
        frontend_hostname = tf_outputs.get(f"{env}_frontend_hostname", {}).get('value')

        # --- Bastion Host (uses IP) ---
        if bastion_ip:
            all_hosts[f"{env}-bastion"] = {
                'ansible_host': bastion_ip,
                'role': 'bastion',
                'env_name': env
            }

        # --- Frontend Host (uses HOSTNAME) ---
        if frontend_hostname:
            all_hosts[f"{env}-frontend"] = {
                'ansible_host': frontend_hostname, # <-- Key change is here!
                'role': 'frontend',
                'env_name': env
            }
        
        # --- Backend Host (uses private IP with ProxyJump via bastion IP) ---
        if backend_private_ip and bastion_ip:
            all_hosts[f"{env}-backend"] = {
                'ansible_host': backend_private_ip,
                'role': 'backend',
                'env_name': env,
                'ansible_ssh_common_args': f'-o ProxyJump=root@{bastion_ip}'
            }

    inventory = {'all': {'hosts': all_hosts}}
    output_path = 'inventories/from_terraform.yml'
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    with open(output_path, 'w') as f:
        f.write("# THIS FILE IS AUTO-GENERATED BY a SCRIPT. DO NOT EDIT.\n")
        yaml.dump(inventory, f, default_flow_style=False, indent=2)

    print(f"Inventory generated at {output_path}")

if __name__ == '__main__':
    main()